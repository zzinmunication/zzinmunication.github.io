{"version":3,"sources":["containers/Category/Category.tsx","components/LanguageSelector/LanguageSelector.tsx","components/LanguageSelector/index.ts","components/DefaultLayout/DefaultLayout.tsx","components/DefaultLayout/index.ts"],"names":["data","Category","props","useState","search","setSearch","useDebounce","debounceSearch","placeholder","size","onChange","e","target","value","style","background","marginTop","header","bordered","dataSource","filter","v","toLowerCase","includes","renderItem","item","Item","Text","mark","Option","LanguageSelector","useRecoilState","langState","lang","setLang","fm","useIntl","formatMessage","dom","useMemo","Object","keys","messages","map","id","defaultValue","width","Header","SubMenu","Content","defaultStyle","Sider","height","menuStyle","display","defaultMenus","routerMeta","reduce","prev","componentKey","propsArr","assignRouteArrayProps","path","Array","isArray","getPath","match","length","pathWIthSlashLengthArr","assignPathData","prevArr","DefaultLayout","children","location","useLocation","useEffect","pathDom","pathArray","pathname","split","text","className","color","theme","mode","activeKey","selectable","to","disabled","opacity","marginLeft","padding","margin","minHeight"],"mappings":"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","file":"static/js/5.49a29a19.chunk.js","sourcesContent":["import DefaultLayout from \"components/DefaultLayout\";\r\nimport React, { FunctionComponent, useState } from \"react\";\r\nimport { Input, List, Typography } from 'antd';\r\nimport { useDebounce } from 'use-debounce';\r\n\r\ninterface ICategoryProps {\r\n}\r\n\r\nconst data = [\r\n  'Racing car sprays burning fuel into crowd.',\r\n  'Japanese princess to wed commoner.',\r\n  'Australian walks 100km after outback crash.',\r\n  'Man charged over missing wedding girl.',\r\n  'Los Angeles battles huge wildfires.',\r\n];\r\n\r\nconst onSearch = (value: string) => console.log(value);\r\n\r\nconst Category: FunctionComponent<ICategoryProps> = (props) => {\r\n  const [search, setSearch] = useState<string>(\"\")\r\n  const [debounceSearch] = useDebounce(search, 500)\r\n\r\n  return (\r\n    <DefaultLayout>\r\n      <Input placeholder=\"input search text\" size=\"large\" onChange={(e: any) => setSearch(e?.target?.value)} />\r\n      <List\r\n        style={{ background: 'white', marginTop: 10 }}\r\n        header={<div>검색내용: {debounceSearch}</div>}\r\n        bordered\r\n        dataSource={data.filter(v => v.toLowerCase().includes(debounceSearch.toLowerCase()))}\r\n        renderItem={item => (\r\n          <List.Item>\r\n            <Typography.Text mark>[ITEM]</Typography.Text> {item}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    </DefaultLayout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React, { FunctionComponent, useMemo, ReactElement } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useIntl } from \"react-intl\";\r\nimport langState, { messages, Lang } from \"state/lang\";\r\nimport { Select } from \"antd\";\r\nimport accountState from \"state/account\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst LanguageSelector: FunctionComponent = () => {\r\n  const [lang, setLang] = useRecoilState(langState);\r\n\r\n  const { formatMessage: fm } = useIntl();\r\n  \r\n  const dom = useMemo<ReactElement[]>(() => {\r\n    const languages: Lang[] = Object.keys(messages) as Lang[]\r\n    return languages.map((lang: Lang) => <Option key={lang} value={lang}>{fm({ id: lang })}</Option>)\r\n  }, [fm])\r\n\r\n  return <Select\r\n    defaultValue={lang}\r\n    value={lang}\r\n    style={{ width: 100 }}\r\n    onChange={(value: Lang) => {\r\n      setLang(value)\r\n    }}>\r\n    {dom}\r\n  </Select>;\r\n};\r\n\r\nexport default LanguageSelector","import LanguageSelector from './LanguageSelector'\r\nexport default LanguageSelector","import React, { FunctionComponent, useEffect, useMemo } from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { routerMeta } from 'meta';\r\n\r\nimport {\r\n  UserOutlined,\r\n  LaptopOutlined,\r\n  NotificationOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport LanguageSelector from \"components/LanguageSelector\";\r\nimport { assignRouteArrayProps } from \"utils\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\ninterface IDefaultLayoutProps {}\r\n\r\nconst defaultStyle = {\r\n  height: \"100%\",\r\n};\r\n\r\nconst menuStyle = {\r\n  // marginLeft: 20,\r\n  width: '100%',\r\n  display: 'flex'\r\n}\r\n\r\nconst defaultMenus = Object.keys(routerMeta).reduce((prev: any[], componentKey: string) => {\r\n  const propsArr: any = assignRouteArrayProps(routerMeta[componentKey])\r\n  const { path } = assignRouteArrayProps(routerMeta[componentKey])\r\n  Array.isArray(propsArr)\r\n\r\n  const getPath = (path: string) => (path.match(/\\//gi) || []).length\r\n\r\n  const pathWIthSlashLengthArr: any | any[] = Array.isArray(propsArr) ? propsArr.map(({ path }) => ({ path, length: getPath(path) })) : ({ path, length: getPath(path) })\r\n\r\n  if (Array.isArray(pathWIthSlashLengthArr)) {\r\n    const assignPathData = pathWIthSlashLengthArr.reduce((prevArr, { path, length }) => {\r\n      if (length === 1) {\r\n        return [...prevArr, { componentKey, path }]\r\n      } else {\r\n        return prevArr\r\n      }\r\n    }, [])\r\n    return [...prev, ...assignPathData]\r\n  } else {\r\n    const { path, length } = pathWIthSlashLengthArr\r\n    if (length === 1) {\r\n      return [...prev, { componentKey, path }]\r\n    } else {\r\n      return prev\r\n    }\r\n  }\r\n}, [])\r\n\r\nconst DefaultLayout: FunctionComponent<IDefaultLayoutProps> = (props) => {\r\n  const { children } = props;\r\n  const { formatMessage: fm } = useIntl();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    console.log('pathname', location.pathname)\r\n  }, [location])\r\n\r\n  const pathDom = useMemo(() => {\r\n    const { pathname } = location\r\n    const pathArray = pathname.split('/')\r\n    const emptyToSpace = (text: string) => text === '' ? ' ' : text\r\n    return pathArray.map(path => <Breadcrumb.Item key={path}>{emptyToSpace(path)}</Breadcrumb.Item>)\r\n  }, [location])\r\n\r\n  return (\r\n    <Layout style={defaultStyle}>\r\n      <Header className=\"header\" style={{ display: \"flex\" }}>\r\n        <div className=\"logo\" style={{ color: \"white\", width: 200 }}>\r\n          {fm({ id: \"title\" })}\r\n        </div>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" style={menuStyle} activeKey={location.pathname} selectable={false}>\r\n          {defaultMenus.map(({ componentKey, path }) => <Menu.Item key={path}>\r\n            <Link to={path}>{componentKey} ({path})</Link>\r\n          </Menu.Item>)}\r\n\r\n          <Menu.Item key=\"language-selector\" disabled style={{ opacity: 1, marginLeft: 'auto' }}>\r\n            <LanguageSelector />\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Layout>\r\n        {/* <Sider width={200} className=\"site-layout-background\">\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={[\"1\"]}\r\n            defaultOpenKeys={[\"sub1\"]}\r\n            style={{ height: \"100%\", borderRight: 0 }}\r\n          >\r\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"subnav 1\">\r\n              <Menu.Item key=\"1\">option1</Menu.Item>\r\n              <Menu.Item key=\"2\">option2</Menu.Item>\r\n              <Menu.Item key=\"3\">option3</Menu.Item>\r\n              <Menu.Item key=\"4\">option4</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"subnav 2\">\r\n              <Menu.Item key=\"5\">option5</Menu.Item>\r\n              <Menu.Item key=\"6\">option6</Menu.Item>\r\n              <Menu.Item key=\"7\">option7</Menu.Item>\r\n              <Menu.Item key=\"8\">option8</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"sub3\"\r\n              icon={<NotificationOutlined />}\r\n              title=\"subnav 3\"\r\n            >\r\n              <Menu.Item key=\"9\">option9</Menu.Item>\r\n              <Menu.Item key=\"10\">option10</Menu.Item>\r\n              <Menu.Item key=\"11\">option11</Menu.Item>\r\n              <Menu.Item key=\"12\">option12</Menu.Item>\r\n            </SubMenu>\r\n          </Menu>\r\n        </Sider> */}\r\n        <Layout style={{ padding: \"0 24px 24px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            {pathDom}\r\n          </Breadcrumb>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              padding: 24,\r\n              margin: 0,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            {children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DefaultLayout;\r\n","import DefaultLayout from './DefaultLayout'\r\nexport default DefaultLayout"],"sourceRoot":""}
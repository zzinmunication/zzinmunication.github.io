{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","components/FlexCenter/index.ts","components/FlexCenter/FlexCenter.tsx","state/dataSelector.ts","containers/Detail/Detail.tsx"],"names":["RedoOutlined","props","ref","React","AntdIcon","_objectSpread","icon","RedoOutlinedSvg","displayName","FlexCenter","styled","div","propsToStyle","style","dataSelectorState","selectorFamily","key","get","query","dataSet","dataSetState","undefined","Detail","useParams","selectData","useRecoilValue","shuffles","useMemo","shuffle","range","length","useState","randomKey","setRandomKey","next","useCallback","DefaultLayout","flexFlow","fontSize","size","marginTop","width","onClick","block"],"mappings":"iKAEeA,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,yrBAA6rB,KAAQ,OAAQ,MAAS,Y,QCM52BA,EAAe,SAAsBC,EAAOC,GAC9C,OAAoBC,gBAAoBC,IAAUC,YAAcA,YAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAaQ,YAAc,eACCL,I,EAAAA,eAAiBH,G,4CCd9BS,ECMSC,IAAOC,IAAV,uVAajB,SAACV,GAAD,OAAkBW,YAAaX,EAAMY,OAAS,O,wBCTnCC,EARWC,YAAe,CACvCC,IAAK,oBACLC,IAAK,SAACC,GAAD,OAA+B,YAAc,IAC1CC,GAAUF,EAD+B,EAAVA,KACjBG,KACpB,YAAiBC,IAAVH,IAAuBC,aAAA,EAAAA,EAAUD,KAAgB,O,yBCyC7CI,UAhCiC,SAACrB,GAC/C,IAAQiB,EAAUK,cAAVL,MACFM,EAAaC,YAAeX,EAAkBI,IAC9CQ,EAAWC,mBAAe,kBAAMC,YAAQC,YAAM,EAAGL,EAAWM,OAAS,MAAK,CAACN,IACjF,EAAkCO,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAOC,uBACX,WACMH,EAAY,IAAMR,EAAWM,OAC/BG,EAAa,GAEbA,EAAaD,EAAY,KAG7B,CAACA,EAAWR,EAAWM,SAIzB,OACE,cAACM,EAAA,EAAD,UACE,eAAC,EAAD,CAAYvB,MAAO,CAAEwB,SAAU,UAA/B,UACE,sBAAKxB,MAAO,CAAEyB,SAAU,IAAxB,mBACQ,4BAAId,EAAWE,EAASM,SAEhC,cAAC,IAAD,CAAQO,KAAM,QAASjC,KAAM,cAAC,EAAD,IAAkBO,MAAO,CAAE2B,UAAW,GAAIC,MAAO,KAAOC,QAASR,EAAMS,OAAK,EAAzG","file":"static/js/8.11be145b.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","import FlexCenter from './FlexCenter'\r\nexport default FlexCenter","import styled, { CSSProperties } from 'styled-components'\r\nimport { propsToStyle } from \"utils\";\r\n\r\ninterface Props {\r\n  style?: CSSProperties\r\n}\r\n\r\nconst FlexCenter: any = styled.div`\r\n  display: -webkit-flex;\r\n  display: flex;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  -webkit-justify-content: center;\r\n  justify-content: center;\r\n  -webkit-flex-direction: row;\r\n  -moz-flex-direction: row;\r\n  -ms-flex-direction: row;\r\n  -o-flex-direction: row;\r\n  flex-direction: row;\r\n  \r\n  ${(props: Props) => propsToStyle(props.style || {})}\r\n`\r\n\r\nexport default FlexCenter","import { selectorFamily } from \"recoil\";\r\nimport dataSetState from \"./dataset\";\r\n\r\nconst dataSelectorState = selectorFamily({\r\n  key: 'dataSelectorState',\r\n  get: (query: string | undefined) => ({ get }) => {\r\n    const dataSet = get(dataSetState);\r\n    return query !== undefined ? (dataSet?.[query] || []) : []\r\n  },\r\n});\r\n\r\nexport default dataSelectorState","import { RedoOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport DefaultLayout from \"components/DefaultLayout\";\r\nimport FlexCenter from \"components/FlexCenter\";\r\nimport React, {\r\n  FunctionComponent, useState, useMemo, useCallback\r\n} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useRecoilValue } from 'recoil';\r\nimport dataSelectorState from 'state/dataSelector';\r\nimport range from \"utils/range\";\r\nimport shuffle from \"utils/shuffle\";\r\n\r\ninterface IDetailProps {\r\n}\r\n\r\nconst Detail: FunctionComponent<IDetailProps> = (props) => {\r\n  const { query } = useParams();\r\n  const selectData = useRecoilValue(dataSelectorState(query))\r\n  const shuffles = useMemo<any[]>(() => shuffle(range(0, selectData.length - 1)), [selectData])\r\n  const [randomKey, setRandomKey] = useState(0)\r\n\r\n  const next = useCallback(\r\n    () => {\r\n      if (randomKey + 1 === selectData.length) {\r\n        setRandomKey(0)\r\n      } else {\r\n        setRandomKey(randomKey + 1)\r\n      }\r\n    },\r\n    [randomKey, selectData.length],\r\n  )\r\n  \r\n  \r\n  return (\r\n    <DefaultLayout>\r\n      <FlexCenter style={{ flexFlow: 'column' }}>\r\n        <div style={{ fontSize: 30 }}>\r\n          추천멘트: <b>{selectData[shuffles[randomKey]]}</b>\r\n        </div>\r\n        <Button size={\"large\"} icon={<RedoOutlined />} style={{ marginTop: 10, width: 120 }} onClick={next} block>\r\n          새로고침\r\n        </Button>\r\n      </FlexCenter>\r\n    </DefaultLayout>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"sourceRoot":""}
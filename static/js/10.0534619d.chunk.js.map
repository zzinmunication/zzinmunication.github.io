{"version":3,"sources":["state/dataSelector.ts","containers/Detail/Detail.tsx"],"names":["dataSelectorState","selectorFamily","key","get","query","dataSet","dataSetState","undefined","Detail","props","useParams","selectData","useRecoilValue","shuffles","useMemo","shuffle","range","length","useState","randomKey","setRandomKey","next","useCallback","DefaultLayout","FlexCenter","style","flexFlow","height","fontSize","textAlign","border","getPastelColor","hex","marginTop","minHeight","borderRadius","padding","wordBreak","size","icon","RedoOutlined","width","onClick","block"],"mappings":"sNAWeA,EARWC,YAAe,CACvCC,IAAK,oBACLC,IAAK,SAACC,GAAD,OAA+B,YAAc,IAC1CC,GAAUF,EAD+B,EAAVA,KACjBG,KACpB,YAAiBC,IAAVH,IAAuBC,aAAA,EAAAA,EAAUD,KAAgB,O,wBCqD7CI,UA1CiC,SAACC,GAC/C,IAAQL,EAAUM,cAAVN,MACFO,EAAaC,YAAeZ,EAAkBI,IAC9CS,EAAWC,mBAAe,kBAAMC,YAAQC,YAAM,EAAGL,EAAWM,OAAS,MAAK,CAACN,IACjF,EAAkCO,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAOC,uBACX,WACMH,EAAY,IAAMR,EAAWM,OAC/BG,EAAa,GAEbA,EAAaD,EAAY,KAG7B,CAACA,EAAWR,EAAWM,SAGzB,OACE,cAACM,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAYC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,QAAjD,UACE,sBAAKF,MAAO,CAAEG,SAAU,IAAxB,UACE,qBAAKH,MAAO,CAAEI,UAAW,UAAzB,oBACOzB,EADP,YAGA,cAACoB,EAAA,EAAD,CAAYC,MAAO,CACjBK,OAAO,cAAD,OAAgBC,yBAAe3B,GAAO4B,KAC5CC,UAAW,EACXC,UAAW,QACXC,aAAc,GACdC,QAAS,IALX,SAOE,mBAAGX,MAAO,CAAEY,UAAW,YAAvB,SAAsC1B,EAAWE,EAASM,WAG9D,cAAC,IAAD,CAAQmB,KAAM,QAASC,KAAM,cAACC,EAAA,EAAD,IAAkBf,MAAO,CAAEQ,UAAW,GAAIQ,MAAO,KAAOC,QAASrB,EAAMsB,OAAK,EAAzG","file":"static/js/10.0534619d.chunk.js","sourcesContent":["import { selectorFamily } from \"recoil\";\r\nimport dataSetState from \"./dataset\";\r\n\r\nconst dataSelectorState = selectorFamily({\r\n  key: 'dataSelectorState',\r\n  get: (query: string | undefined) => ({ get }) => {\r\n    const dataSet = get(dataSetState);\r\n    return query !== undefined ? (dataSet?.[query] || []) : []\r\n  },\r\n});\r\n\r\nexport default dataSelectorState","import { RedoOutlined } from \"@ant-design/icons\";\r\nimport { Button } from \"antd\";\r\nimport DefaultLayout from \"components/DefaultLayout\";\r\nimport FlexCenter from \"components/FlexCenter\";\r\nimport React, {\r\n  FunctionComponent, useState, useMemo, useCallback\r\n} from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useRecoilValue } from 'recoil';\r\nimport dataSelectorState from 'state/dataSelector';\r\nimport { range, shuffle } from \"utils\";\r\nimport {\r\n  getPastelColor\r\n} from \"pastel-color\";\r\n\r\ninterface IDetailProps {\r\n}\r\n\r\nconst Detail: FunctionComponent<IDetailProps> = (props) => {\r\n  const { query } = useParams();\r\n  const selectData = useRecoilValue(dataSelectorState(query))\r\n  const shuffles = useMemo<any[]>(() => shuffle(range(0, selectData.length - 1)), [selectData])\r\n  const [randomKey, setRandomKey] = useState(0)\r\n\r\n  const next = useCallback(\r\n    () => {\r\n      if (randomKey + 1 === selectData.length) {\r\n        setRandomKey(0)\r\n      } else {\r\n        setRandomKey(randomKey + 1)\r\n      }\r\n    },\r\n    [randomKey, selectData.length],\r\n  )\r\n  \r\n  return (\r\n    <DefaultLayout>\r\n      <FlexCenter style={{ flexFlow: 'column', height: '100%' }}>\r\n        <div style={{ fontSize: 30 }}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            {`<${query} 추천멘트>`}\r\n          </div>\r\n          <FlexCenter style={{\r\n            border: `3px dashed ${getPastelColor(query).hex}`,\r\n            marginTop: 5,\r\n            minHeight: '150px',\r\n            borderRadius: 10,\r\n            padding: 16\r\n          }}>\r\n            <b style={{ wordBreak: 'keep-all' }}>{selectData[shuffles[randomKey]]}</b>\r\n          </FlexCenter>\r\n        </div>\r\n        <Button size={\"large\"} icon={<RedoOutlined />} style={{ marginTop: 16, width: 120 }} onClick={next} block>\r\n          새로고침\r\n        </Button>\r\n      </FlexCenter>\r\n    </DefaultLayout>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"sourceRoot":""}